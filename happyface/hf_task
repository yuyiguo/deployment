#!/bin/sh

##H Usage: hf_task ACTION
##H
##H Available actions:
##H   help                show this help
##H   version             get current version of the service
##H   run                 process job status from sites
##H   updateweb           update web area with the output of last run
##H   logclean [minutes]  clean logs older than [minutes] (def. 2 weeks)
##H   histclean [minutes] clean historical data older than [minutes] (def. 2 weeks)
##H
##H For more details please refer to operations page:
##H   https://twiki.cern.ch/twiki/bin/view/CMS/HappyFace

ME=$(basename $(dirname $0))
TOP=$(cd $(dirname $0)/../../.. && pwd)
ROOT=$(cd $(dirname $0)/../.. && pwd)
CFGDIR=$(dirname $0)
STATEDIR=$TOP/state/$ME
LOGDIR=$TOP/logs/$ME
PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/kerberos/bin

WEBDIR={WEBDIR}

# Main routine, perform action requested on command line.
case ${1:-help} in
  run )
    . $ROOT/apps/$ME/etc/profile.d/init.sh
    cd $HAPPYFACE_ROOT/$PYTHON_LIB_SITE_PACKAGES/HappyFace
    ./run.py &> $LOGDIR/$(date +%Y-%m-%d_%H-%M-%S)
    ;;

  updateweb )
    klist -s || { echo "$0: you must have a valid afs kerberos token."; exit 1; }
    rsync -q -au --exclude='.svn' --exclude='HappyFace.db' --delete $STATEDIR/webpage/ $WEBDIR/
    perl -p -i -e 's,sqlite:.*HappyFace.db,sqlite:../HappyFace.db,g' $WEBDIR/database.inc.php
    rsync -q -au $STATEDIR/webpage/HappyFace.db $WEBDIR/../
    ;;

  logclean )
    case $(uname) in Darwin ) statfmt="-f %c";; * ) statfmt="-c %Z" ;; esac
    MIN=$(($2)); [ $MIN -lt 1 ] && MIN=20160 # defaults to 2 weeks
    AGE=$(($(date +%s)-$MIN*60));

    LOG_FILES="$LOGDIR/*-*-*_*-*-*"
    for FILE in $LOG_FILES; do
       LAST_CHANGE=$(stat $statfmt $FILE 2> /dev/null || date +%s)
       [ $LAST_CHANGE -lt $AGE ] && rm "$FILE"  &> /dev/null
    done
    ;;

  histclean )
    MIN=$(($2)); [ $MIN -lt 1 ] && MIN=20160 # defaults to 2 weeks 
    AGE=$(($(date +%s)-$MIN*60));

    echo $STATEDIR/webpage/archive/*/*/* | sed "s|$STATEDIR/webpage/archive/||g" | \
    while IFS="/" read -d " " YY MM DD; do
       X=$(date -d "$YY-$MM-$DD" +%s 2>/dev/null || date +%s)
       [ $X -lt $AGE ] && rm -rf $STATEDIR/webpage/archive/$YY/$MM/$DD
    done
    find $STATEDIR/webpage/archive/ -type d -empty | xargs rmdir 2>/dev/null
    ;;  
  
  help )
    perl -ne '/^##H/ && do { s/^##H ?//; print }' < $0
    ;;

  version )
    echo "${HAPPYFACE_VERSION:-unknown}"
    ;;

  * )
    echo "$0: unknown action '$1', please try '$0 help' or documentation." 1>&2
    exit 1
    ;;
esac
